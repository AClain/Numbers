{"ast":null,"code":"import axios from 'axios';\n\nclass Calls {\n  getRandomActivity() {\n    return new Promise((resolve, reject) => {\n      axios.get('http://www.boredapi.com/api/activity').then(res => {\n        resolve(res.data.activity);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  getNumberFact(number, type) {\n    return new Promise((resolve, reject) => {\n      axios.get('http://numbersapi.com/' + number + '/' + type).then(res => {\n        resolve(res.data);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  getDateFact(date) {\n    const currDate = new Date(date);\n    const currDateMonth = currDate.getMonth();\n    const currDateDay = currDate.getDay();\n    return new Promise((resolve, reject) => {\n      axios.get('http://numbersapi.com/' + currDateMonth + '/' + currDateDay + '/date').then(res => {\n        resolve(res.data);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nexport default new Calls();","map":{"version":3,"sources":["/media/alex/DATA/Personnal/Numbers/src/assets/js/calls.js"],"names":["axios","Calls","getRandomActivity","Promise","resolve","reject","get","then","res","data","activity","err","getNumberFact","number","type","getDateFact","date","currDate","Date","currDateMonth","getMonth","currDateDay","getDay"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,CAAY;AACRC,EAAAA,iBAAiB,GAAG;AAChB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCL,MAAAA,KAAK,CAACM,GAAN,CAAU,sCAAV,EACKC,IADL,CAESC,GAAD,IAAS;AACLJ,QAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,CAASC,QAAV,CAAP;AACH,OAJT,EAIYC,GAAD,IAAS;AACRN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACH,OANT;AAQH,KATM,CAAP;AAUH;;AAEDC,EAAAA,aAAa,CAACC,MAAD,EAASC,IAAT,EAAe;AACxB,WAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCL,MAAAA,KAAK,CAACM,GAAN,CAAU,2BAA2BO,MAA3B,GAAoC,GAApC,GAA0CC,IAApD,EACKP,IADL,CAESC,GAAD,IAAS;AACLJ,QAAAA,OAAO,CAACI,GAAG,CAACC,IAAL,CAAP;AACH,OAJT,EAKSE,GAAD,IAAS;AACLN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACH,OAPT;AASH,KAVM,CAAP;AAWH;;AAEDI,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAjB;AACA,UAAMG,aAAa,GAAGF,QAAQ,CAACG,QAAT,EAAtB;AACA,UAAMC,WAAW,GAAGJ,QAAQ,CAACK,MAAT,EAApB;AAEA,WAAO,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCL,MAAAA,KAAK,CAACM,GAAN,CAAU,2BAA2Ba,aAA3B,GAA2C,GAA3C,GAAiDE,WAAjD,GAA+D,OAAzE,EACKd,IADL,CAESC,GAAD,IAAS;AACLJ,QAAAA,OAAO,CAACI,GAAG,CAACC,IAAL,CAAP;AACH,OAJT,EAKSE,GAAD,IAAS;AACLN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACH,OAPT;AASH,KAVM,CAAP;AAWH;;AA5CO;;AA+CZ,eAAe,IAAIV,KAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nclass Calls {\n    getRandomActivity() {\n        return new Promise((resolve, reject) => {\n            axios.get('http://www.boredapi.com/api/activity')\n                .then(\n                    (res) => {\n                        resolve(res.data.activity);\n                    }, (err) => {\n                        reject(err);\n                    }\n                );\n        });\n    }\n\n    getNumberFact(number, type) {\n        return new Promise((resolve, reject) => {\n            axios.get('http://numbersapi.com/' + number + '/' + type)\n                .then(\n                    (res) => {\n                        resolve(res.data);\n                    },\n                    (err) => {\n                        reject(err);\n                    }\n                );\n        });\n    }\n\n    getDateFact(date) {\n        const currDate = new Date(date);\n        const currDateMonth = currDate.getMonth();\n        const currDateDay = currDate.getDay();\n\n        return new Promise((resolve, reject) => {\n            axios.get('http://numbersapi.com/' + currDateMonth + '/' + currDateDay + '/date')\n                .then(\n                    (res) => {\n                        resolve(res.data);\n                    },\n                    (err) => {\n                        reject(err);\n                    }\n                )\n        })\n    }\n}\n\nexport default new Calls();"]},"metadata":{},"sourceType":"module"}